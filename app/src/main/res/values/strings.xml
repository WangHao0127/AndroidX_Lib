<resources>
    <string name="app_name">AndroidX_Lib</string>

    <string name="length_short">短</string>
    <string name="length_long">长</string>
    <string name="length_indefinite">无限时长</string>
    <string name="length_custom">设置时长</string>
    <string name="info">信息</string>
    <string name="confirm">确认</string>
    <string name="warning">警告</string>
    <string name="danger">危险</string>
    <string name="back_custom">设置背景色</string>
    <string name="color_message">设置TextView文字颜色</string>
    <string name="color_action">设置Buttom文字颜色</string>
    <string name="alpha">设置背景透明度</string>
    <string name="action">设置按钮文字及点击监听</string>
    <string name="callback">设置展示及隐藏监听</string>
    <string name="message_gravity_default">文字位置:默认</string>
    <string name="message_gravity_center">文字位置:居中</string>
    <string name="message_gravity_right">文字位置:居右</string>
    <string name="message_leftright_drawable">设置文字位置左右两侧图片</string>
    <string name="addview">向Snackbar布局中添加View</string>
    <string name="radius">设置圆角半径值</string>
    <string name="radius_stroke">设置圆角半径值及边框</string>
    <string name="snackbar_layout_gravity_default">Snackbar位置:默认</string>
    <string name="snackbar_layout_gravity_top">Snackbar位置:顶部</string>
    <string name="snackbar_layout_gravity_center">Snackbar位置:居中</string>
    <string name="margins">设置Snackbar布局的外边距</string>
    <string name="above">设置Snackbar显示在指定View的上方</string>
    <string name="bellow">设置Snackbar显示在指定View的下方</string>
    <string name="duration">显示时长</string>
    <string name="backgroundcolor">背景色</string>
    <string name="messageactioncolor">文字及按钮颜色</string>
    <string name="messageviewgravity">TextView文字对齐方式</string>
    <string name="snackbargravity">Snackbar位置</string>
    <string name="multimethods">同时使用多种方法</string>
    <string name="crazybutton">疯狂测试!!!</string>
    <string name="memoryleak">尝试内存泄漏</string>

    <string name="textContent">要实现这样的效果, 需要用到:
CoordinatorLayout和AppbarLayout的配合, 以及实现了NestedScrollView的布局或控件.
AppbarLayout是一种支持响应滚动手势的app bar布局, CollapsingToolbarLayout则是专门用来实现子布局内不同元素响应滚动细节的布局.
与AppbarLayout组合的滚动布局(RecyclerView, NestedScrollView等),需要设置 app:layout_behavior = "@string/appbar_scrolling_view_behavior" .没有设置的话, AppbarLayout将不会响应滚动布局的滚动事件.

我们回到再前面一章"Toolbar的使用", 将布局改动如下:

作者：朋朋彭哥
链接：https://www.jianshu.com/p/bbc703a0015e
来源：简书
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。要实现这样的效果, 需要用到:
CoordinatorLayout和AppbarLayout的配合, 以及实现了NestedScrollView的布局或控件.
AppbarLayout是一种支持响应滚动手势的app bar布局, CollapsingToolbarLayout则是专门用来实现子布局内不同元素响应滚动细节的布局.
与AppbarLayout组合的滚动布局(RecyclerView, NestedScrollView等),需要设置 app:layout_behavior = "@string/appbar_scrolling_view_behavior" .没有设置的话, AppbarLayout将不会响应滚动布局的滚动事件.

我们回到再前面一章"Toolbar的使用", 将布局改动如下:

作者：朋朋彭哥
链接：https://www.jianshu.com/p/bbc703a0015e
来源：简书
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。要实现这样的效果, 需要用到:
CoordinatorLayout和AppbarLayout的配合, 以及实现了NestedScrollView的布局或控件.
AppbarLayout是一种支持响应滚动手势的app bar布局, CollapsingToolbarLayout则是专门用来实现子布局内不同元素响应滚动细节的布局.
与AppbarLayout组合的滚动布局(RecyclerView, NestedScrollView等),需要设置 app:layout_behavior = "@string/appbar_scrolling_view_behavior" .没有设置的话, AppbarLayout将不会响应滚动布局的滚动事件.

我们回到再前面一章"Toolbar的使用", 将布局改动如下:

作者：朋朋彭哥
链接：https://www.jianshu.com/p/bbc703a0015e
来源：简书
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。要实现这样的效果, 需要用到:
CoordinatorLayout和AppbarLayout的配合, 以及实现了NestedScrollView的布局或控件.
AppbarLayout是一种支持响应滚动手势的app bar布局, CollapsingToolbarLayout则是专门用来实现子布局内不同元素响应滚动细节的布局.
与AppbarLayout组合的滚动布局(RecyclerView, NestedScrollView等),需要设置 app:layout_behavior = "@string/appbar_scrolling_view_behavior" .没有设置的话, AppbarLayout将不会响应滚动布局的滚动事件.

我们回到再前面一章"Toolbar的使用", 将布局改动如下:

作者：朋朋彭哥
链接：https://www.jianshu.com/p/bbc703a0015e
来源：简书
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。要实现这样的效果, 需要用到:
CoordinatorLayout和AppbarLayout的配合, 以及实现了NestedScrollView的布局或控件.
AppbarLayout是一种支持响应滚动手势的app bar布局, CollapsingToolbarLayout则是专门用来实现子布局内不同元素响应滚动细节的布局.
与AppbarLayout组合的滚动布局(RecyclerView, NestedScrollView等),需要设置 app:layout_behavior = "@string/appbar_scrolling_view_behavior" .没有设置的话, AppbarLayout将不会响应滚动布局的滚动事件.

我们回到再前面一章"Toolbar的使用", 将布局改动如下:

作者：朋朋彭哥
链接：https://www.jianshu.com/p/bbc703a0015e
来源：简书
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</string>
</resources>
