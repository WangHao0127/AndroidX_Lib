apply plugin: 'com.android.library'

def configs = rootProject.ext.android //android配置拿取config
def thirdPartyDependencies = rootProject.ext.thirdPartyDependencies
def netDependencies = rootProject.ext.netDependencies
def supportDependencies = rootProject.ext.supportDependencies
def tests = rootProject.ext.tests
def constraints = rootProject.ext.constraints

buildscript {
    repositories {
        jcenter()
        mavenCentral()
    }
}

android {
    compileSdkVersion configs.compileSdkVersion
    buildToolsVersion configs.buildToolsVersion

    /*DataBinding 视图绑定开启*/
    dataBinding {
        enabled = true
    }

    defaultConfig {
        minSdkVersion configs.minSdkVersion
        targetSdkVersion configs.targetSdkVersion
        versionCode configs.versionCode
        versionName configs.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            consumerProguardFile 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility = configs.sourceCompatibility
        targetCompatibility = configs.targetCompatibility
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    testImplementation tests.junit
    androidTestImplementation tests.test_junit

    api constraints.constraintlayout

    api supportDependencies.multidex
    api supportDependencies.appcompat
    api supportDependencies.design
    api supportDependencies.lifecycle

    api thirdPartyDependencies.immersionbar
    api thirdPartyDependencies.immersionbar_components
    api thirdPartyDependencies.eventbus
    api thirdPartyDependencies.utilcode
    debugApi thirdPartyDependencies.leakcanary
    releaseApi thirdPartyDependencies.leakcanary_no_op

}
